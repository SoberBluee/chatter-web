{"ast":null,"code":"var _asyncToGenerator = require(\"/Users/ethandonovan/Documents/GitHub/chatter-web/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nconst fs = require('../fs.js');\n\nconst getOptions = require('../common/get-options.js');\n\nconst node = require('../common/node.js');\n\nconst owner = require('../common/owner.js');\n\nconst polyfill = require('./polyfill.js'); // node 10.12.0 added the options parameter, which allows recursive and mode\n// properties to be passed\n\n\nconst useNative = node.satisfies('>=10.12.0'); // extends mkdir with the ability to specify an owner of the new dir\n\nconst mkdir = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (path, opts) {\n    const options = getOptions(opts, {\n      copy: ['mode', 'recursive', 'owner'],\n      wrap: 'mode'\n    });\n    const {\n      uid,\n      gid\n    } = yield owner.validate(path, options.owner); // the polyfill is tested separately from this module, no need to hack\n    // process.version to try to trigger it just for coverage\n    // istanbul ignore next\n\n    const result = useNative ? yield fs.mkdir(path, options) : yield polyfill(path, options);\n    yield owner.update(path, uid, gid);\n    return result;\n  });\n\n  return function mkdir(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = mkdir;","map":{"version":3,"sources":["/Users/ethandonovan/Documents/GitHub/chatter-web/node_modules/@npmcli/fs/lib/mkdir/index.js"],"names":["fs","require","getOptions","node","owner","polyfill","useNative","satisfies","mkdir","path","opts","options","copy","wrap","uid","gid","validate","result","update","module","exports"],"mappings":";;AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,0BAAD,CAA1B;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,mBAAD,CAApB;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,oBAAD,CAArB;;AAEA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,eAAD,CAAxB,C,CAEA;AACA;;;AACA,MAAMK,SAAS,GAAGH,IAAI,CAACI,SAAL,CAAe,WAAf,CAAlB,C,CAEA;;AACA,MAAMC,KAAK;AAAA,+BAAG,WAAOC,IAAP,EAAaC,IAAb,EAAsB;AAClC,UAAMC,OAAO,GAAGT,UAAU,CAACQ,IAAD,EAAO;AAC/BE,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,WAAT,EAAsB,OAAtB,CADyB;AAE/BC,MAAAA,IAAI,EAAE;AAFyB,KAAP,CAA1B;AAIA,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,cAAqBX,KAAK,CAACY,QAAN,CAAeP,IAAf,EAAqBE,OAAO,CAACP,KAA7B,CAA3B,CALkC,CAOlC;AACA;AACA;;AACA,UAAMa,MAAM,GAAGX,SAAS,SACdN,EAAE,CAACQ,KAAH,CAASC,IAAT,EAAeE,OAAf,CADc,SAEdN,QAAQ,CAACI,IAAD,EAAOE,OAAP,CAFlB;AAIA,UAAMP,KAAK,CAACc,MAAN,CAAaT,IAAb,EAAmBK,GAAnB,EAAwBC,GAAxB,CAAN;AAEA,WAAOE,MAAP;AACD,GAjBU;;AAAA,kBAALT,KAAK;AAAA;AAAA;AAAA,GAAX;;AAmBAW,MAAM,CAACC,OAAP,GAAiBZ,KAAjB","sourcesContent":["const fs = require('../fs.js')\nconst getOptions = require('../common/get-options.js')\nconst node = require('../common/node.js')\nconst owner = require('../common/owner.js')\n\nconst polyfill = require('./polyfill.js')\n\n// node 10.12.0 added the options parameter, which allows recursive and mode\n// properties to be passed\nconst useNative = node.satisfies('>=10.12.0')\n\n// extends mkdir with the ability to specify an owner of the new dir\nconst mkdir = async (path, opts) => {\n  const options = getOptions(opts, {\n    copy: ['mode', 'recursive', 'owner'],\n    wrap: 'mode',\n  })\n  const { uid, gid } = await owner.validate(path, options.owner)\n\n  // the polyfill is tested separately from this module, no need to hack\n  // process.version to try to trigger it just for coverage\n  // istanbul ignore next\n  const result = useNative\n    ? await fs.mkdir(path, options)\n    : await polyfill(path, options)\n\n  await owner.update(path, uid, gid)\n\n  return result\n}\n\nmodule.exports = mkdir\n"]},"metadata":{},"sourceType":"script"}