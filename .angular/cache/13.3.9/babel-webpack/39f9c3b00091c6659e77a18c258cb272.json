{"ast":null,"code":"var _asyncToGenerator = require(\"/Users/ethandonovan/Documents/GitHub/chatter-web/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nconst fs = require('../fs.js');\n\nconst getOptions = require('../common/get-options.js');\n\nconst node = require('../common/node.js');\n\nconst polyfill = require('./polyfill.js'); // node 14.14.0 added fs.rm, which allows both the force and recursive options\n\n\nconst useNative = node.satisfies('>=14.14.0');\n\nconst rm = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (path, opts) {\n    const options = getOptions(opts, {\n      copy: ['retryDelay', 'maxRetries', 'recursive', 'force']\n    }); // the polyfill is tested separately from this module, no need to hack\n    // process.version to try to trigger it just for coverage\n    // istanbul ignore next\n\n    return useNative ? fs.rm(path, options) : polyfill(path, options);\n  });\n\n  return function rm(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = rm;","map":{"version":3,"sources":["/Users/ethandonovan/Documents/GitHub/chatter-web/node_modules/@npmcli/fs/lib/rm/index.js"],"names":["fs","require","getOptions","node","polyfill","useNative","satisfies","rm","path","opts","options","copy","module","exports"],"mappings":";;AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,0BAAD,CAA1B;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,mBAAD,CAApB;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,eAAD,CAAxB,C,CAEA;;;AACA,MAAMI,SAAS,GAAGF,IAAI,CAACG,SAAL,CAAe,WAAf,CAAlB;;AAEA,MAAMC,EAAE;AAAA,+BAAG,WAAOC,IAAP,EAAaC,IAAb,EAAsB;AAC/B,UAAMC,OAAO,GAAGR,UAAU,CAACO,IAAD,EAAO;AAC/BE,MAAAA,IAAI,EAAE,CAAC,YAAD,EAAe,YAAf,EAA6B,WAA7B,EAA0C,OAA1C;AADyB,KAAP,CAA1B,CAD+B,CAK/B;AACA;AACA;;AACA,WAAON,SAAS,GACZL,EAAE,CAACO,EAAH,CAAMC,IAAN,EAAYE,OAAZ,CADY,GAEZN,QAAQ,CAACI,IAAD,EAAOE,OAAP,CAFZ;AAGD,GAXO;;AAAA,kBAAFH,EAAE;AAAA;AAAA;AAAA,GAAR;;AAaAK,MAAM,CAACC,OAAP,GAAiBN,EAAjB","sourcesContent":["const fs = require('../fs.js')\nconst getOptions = require('../common/get-options.js')\nconst node = require('../common/node.js')\nconst polyfill = require('./polyfill.js')\n\n// node 14.14.0 added fs.rm, which allows both the force and recursive options\nconst useNative = node.satisfies('>=14.14.0')\n\nconst rm = async (path, opts) => {\n  const options = getOptions(opts, {\n    copy: ['retryDelay', 'maxRetries', 'recursive', 'force'],\n  })\n\n  // the polyfill is tested separately from this module, no need to hack\n  // process.version to try to trigger it just for coverage\n  // istanbul ignore next\n  return useNative\n    ? fs.rm(path, options)\n    : polyfill(path, options)\n}\n\nmodule.exports = rm\n"]},"metadata":{},"sourceType":"script"}