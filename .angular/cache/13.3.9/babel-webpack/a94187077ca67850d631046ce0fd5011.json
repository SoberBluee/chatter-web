{"ast":null,"code":"var _asyncToGenerator = require(\"/Users/ethandonovan/Documents/GitHub/chatter-web/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nconst fs = require('../fs.js');\n\nconst getOptions = require('../common/get-options.js');\n\nconst node = require('../common/node.js');\n\nconst polyfill = require('./polyfill.js'); // node 16.7.0 added fs.cp\n\n\nconst useNative = node.satisfies('>=16.7.0');\n\nconst cp = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (src, dest, opts) {\n    const options = getOptions(opts, {\n      copy: ['dereference', 'errorOnExist', 'filter', 'force', 'preserveTimestamps', 'recursive']\n    }); // the polyfill is tested separately from this module, no need to hack\n    // process.version to try to trigger it just for coverage\n    // istanbul ignore next\n\n    return useNative ? fs.cp(src, dest, options) : polyfill(src, dest, options);\n  });\n\n  return function cp(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = cp;","map":{"version":3,"sources":["/Users/ethandonovan/Documents/GitHub/chatter-web/node_modules/@npmcli/fs/lib/cp/index.js"],"names":["fs","require","getOptions","node","polyfill","useNative","satisfies","cp","src","dest","opts","options","copy","module","exports"],"mappings":";;AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,0BAAD,CAA1B;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,mBAAD,CAApB;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,eAAD,CAAxB,C,CAEA;;;AACA,MAAMI,SAAS,GAAGF,IAAI,CAACG,SAAL,CAAe,UAAf,CAAlB;;AAEA,MAAMC,EAAE;AAAA,+BAAG,WAAOC,GAAP,EAAYC,IAAZ,EAAkBC,IAAlB,EAA2B;AACpC,UAAMC,OAAO,GAAGT,UAAU,CAACQ,IAAD,EAAO;AAC/BE,MAAAA,IAAI,EAAE,CAAC,aAAD,EAAgB,cAAhB,EAAgC,QAAhC,EAA0C,OAA1C,EAAmD,oBAAnD,EAAyE,WAAzE;AADyB,KAAP,CAA1B,CADoC,CAKpC;AACA;AACA;;AACA,WAAOP,SAAS,GACZL,EAAE,CAACO,EAAH,CAAMC,GAAN,EAAWC,IAAX,EAAiBE,OAAjB,CADY,GAEZP,QAAQ,CAACI,GAAD,EAAMC,IAAN,EAAYE,OAAZ,CAFZ;AAGD,GAXO;;AAAA,kBAAFJ,EAAE;AAAA;AAAA;AAAA,GAAR;;AAaAM,MAAM,CAACC,OAAP,GAAiBP,EAAjB","sourcesContent":["const fs = require('../fs.js')\nconst getOptions = require('../common/get-options.js')\nconst node = require('../common/node.js')\nconst polyfill = require('./polyfill.js')\n\n// node 16.7.0 added fs.cp\nconst useNative = node.satisfies('>=16.7.0')\n\nconst cp = async (src, dest, opts) => {\n  const options = getOptions(opts, {\n    copy: ['dereference', 'errorOnExist', 'filter', 'force', 'preserveTimestamps', 'recursive'],\n  })\n\n  // the polyfill is tested separately from this module, no need to hack\n  // process.version to try to trigger it just for coverage\n  // istanbul ignore next\n  return useNative\n    ? fs.cp(src, dest, options)\n    : polyfill(src, dest, options)\n}\n\nmodule.exports = cp\n"]},"metadata":{},"sourceType":"script"}