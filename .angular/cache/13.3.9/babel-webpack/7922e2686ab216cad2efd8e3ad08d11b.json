{"ast":null,"code":"var _asyncToGenerator = require(\"/Users/ethandonovan/Documents/GitHub/chatter-web/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nconst {\n  join,\n  sep\n} = require('path');\n\nconst getOptions = require('./common/get-options.js');\n\nconst mkdir = require('./mkdir/index.js');\n\nconst mkdtemp = require('./mkdtemp.js');\n\nconst rm = require('./rm/index.js'); // create a temp directory, ensure its permissions match its parent, then call\n// the supplied function passing it the path to the directory. clean up after\n// the function finishes, whether it throws or not\n\n\nconst withTempDir = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (root, fn, opts) {\n    const options = getOptions(opts, {\n      copy: ['tmpPrefix']\n    }); // create the directory, and fix its ownership\n\n    yield mkdir(root, {\n      recursive: true,\n      owner: 'inherit'\n    });\n    const target = yield mkdtemp(join(`${root}${sep}`, options.tmpPrefix || ''), {\n      owner: 'inherit'\n    });\n    let err;\n    let result;\n\n    try {\n      result = yield fn(target);\n    } catch (_err) {\n      err = _err;\n    }\n\n    try {\n      yield rm(target, {\n        force: true,\n        recursive: true\n      });\n    } catch (err) {}\n\n    if (err) {\n      throw err;\n    }\n\n    return result;\n  });\n\n  return function withTempDir(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = withTempDir;","map":{"version":3,"sources":["/Users/ethandonovan/Documents/GitHub/chatter-web/node_modules/@npmcli/fs/lib/with-temp-dir.js"],"names":["join","sep","require","getOptions","mkdir","mkdtemp","rm","withTempDir","root","fn","opts","options","copy","recursive","owner","target","tmpPrefix","err","result","_err","force","module","exports"],"mappings":";;AAAA,MAAM;AAAEA,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAgBC,OAAO,CAAC,MAAD,CAA7B;;AAEA,MAAMC,UAAU,GAAGD,OAAO,CAAC,yBAAD,CAA1B;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,kBAAD,CAArB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,cAAD,CAAvB;;AACA,MAAMI,EAAE,GAAGJ,OAAO,CAAC,eAAD,CAAlB,C,CAEA;AACA;AACA;;;AACA,MAAMK,WAAW;AAAA,+BAAG,WAAOC,IAAP,EAAaC,EAAb,EAAiBC,IAAjB,EAA0B;AAC5C,UAAMC,OAAO,GAAGR,UAAU,CAACO,IAAD,EAAO;AAC/BE,MAAAA,IAAI,EAAE,CAAC,WAAD;AADyB,KAAP,CAA1B,CAD4C,CAI5C;;AACA,UAAMR,KAAK,CAACI,IAAD,EAAO;AAAEK,MAAAA,SAAS,EAAE,IAAb;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAAP,CAAX;AAEA,UAAMC,MAAM,SAASV,OAAO,CAACL,IAAI,CAAE,GAAEQ,IAAK,GAAEP,GAAI,EAAf,EAAkBU,OAAO,CAACK,SAAR,IAAqB,EAAvC,CAAL,EAAiD;AAAEF,MAAAA,KAAK,EAAE;AAAT,KAAjD,CAA5B;AACA,QAAIG,GAAJ;AACA,QAAIC,MAAJ;;AAEA,QAAI;AACFA,MAAAA,MAAM,SAAST,EAAE,CAACM,MAAD,CAAjB;AACD,KAFD,CAEE,OAAOI,IAAP,EAAa;AACbF,MAAAA,GAAG,GAAGE,IAAN;AACD;;AAED,QAAI;AACF,YAAMb,EAAE,CAACS,MAAD,EAAS;AAAEK,QAAAA,KAAK,EAAE,IAAT;AAAeP,QAAAA,SAAS,EAAE;AAA1B,OAAT,CAAR;AACD,KAFD,CAEE,OAAOI,GAAP,EAAY,CAAE;;AAEhB,QAAIA,GAAJ,EAAS;AACP,YAAMA,GAAN;AACD;;AAED,WAAOC,MAAP;AACD,GA1BgB;;AAAA,kBAAXX,WAAW;AAAA;AAAA;AAAA,GAAjB;;AA4BAc,MAAM,CAACC,OAAP,GAAiBf,WAAjB","sourcesContent":["const { join, sep } = require('path')\n\nconst getOptions = require('./common/get-options.js')\nconst mkdir = require('./mkdir/index.js')\nconst mkdtemp = require('./mkdtemp.js')\nconst rm = require('./rm/index.js')\n\n// create a temp directory, ensure its permissions match its parent, then call\n// the supplied function passing it the path to the directory. clean up after\n// the function finishes, whether it throws or not\nconst withTempDir = async (root, fn, opts) => {\n  const options = getOptions(opts, {\n    copy: ['tmpPrefix'],\n  })\n  // create the directory, and fix its ownership\n  await mkdir(root, { recursive: true, owner: 'inherit' })\n\n  const target = await mkdtemp(join(`${root}${sep}`, options.tmpPrefix || ''), { owner: 'inherit' })\n  let err\n  let result\n\n  try {\n    result = await fn(target)\n  } catch (_err) {\n    err = _err\n  }\n\n  try {\n    await rm(target, { force: true, recursive: true })\n  } catch (err) {}\n\n  if (err) {\n    throw err\n  }\n\n  return result\n}\n\nmodule.exports = withTempDir\n"]},"metadata":{},"sourceType":"script"}